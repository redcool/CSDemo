// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
// RWTexture2D<float4> Result;
RWStructuredBuffer<float3> Result;

[numthreads(1,1,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    // TODO: insert actual code here!
    // Result[id.xy] = float4(id.x & id.y, (id.x & 15)/15.0, (id.y & 15)/15.0, 0.0);
    matrix<float,3,3> m1 = {
        1,2,3,
        4,5,6,
        7,8,9
    };
    matrix<float,3,3> m2 = {
        1,2,3,
        4,5,6,
        7,8,9
    };
    // matrix<float,3,3> result = mul(m1,m2);
    vector<float,3> v1 = {1,2,3};
    vector<float,3> result = mul(v1,m1);

    Result[id.x] = result;
}
